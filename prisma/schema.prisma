// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  bankAccounts BankAccount[]
  profile      Profile?
}

model BankAccount {
  id                  Int    @id @default(autoincrement())
  user_id             Int
  bank_name           String
  bank_account_number String 
  balance             Float  @default(0)
  user                User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  sourceTransactions      Transaction[] @relation("SourceAccountTransactions")
  destinationTransactions Transaction[] @relation("DestinationAccountTransactions")
}

model Profile {
  id              Int    @id @default(autoincrement())
  user_id         Int    @unique
  identity_type   String
  identity_number String   @unique
  address         String
  user            User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Transaction {
  id                     Int         @id @default(autoincrement())
  source_account_id      Int
  destination_account_id Int
  amount                 Float
  sourceAccount          BankAccount @relation("SourceAccountTransactions", fields: [source_account_id], references: [id], onDelete: Cascade)
  destinationAccount     BankAccount @relation("DestinationAccountTransactions", fields: [destination_account_id], references: [id], onDelete: Cascade)
}
